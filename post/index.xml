<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 星辰的博客</title>
    <link>/post/</link>
    <description>Recent content in Posts on 星辰的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 08 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nginx cannot open shared object file</title>
      <link>/post/nginx_cannot_open_shared_object_file/</link>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/nginx_cannot_open_shared_object_file/</guid>
      <description>nginx检查报错 error while loading shared libraries: libprofiler.so.0: cannot open shared object file 在centos7.3上编译安装nginx 启动测试出错 1 2 [root@web02 local]# /usr/local/nginx/sbin/nginx -t /usr/local/nginx/sbin/nginx: error while loading shared libraries: libprofiler.so.0: cannot open shared object file: No such file or directory 从错误看出是缺少lib文件导致，进一步查看下 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 [root@web02 local]# ldd $(which /usr/local/nginx/sbin/nginx) linux-vdso.so.1 =&amp;gt; (0x00007ffdd918e000) libdl.so.2 =&amp;gt; /lib64/libdl.so.2 (0x00007fea2b1c8000) libpthread.so.0 =&amp;gt; /lib64/libpthread.so.0 (0x00007fea2afac000) libcrypt.so.1</description>
    </item>
    
    <item>
      <title>IProxy代理服务器</title>
      <link>/post/iproxy/</link>
      <pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/iproxy/</guid>
      <description>项目地址 Github Gitee 简介 IProxy 是一个 JAVA 编写的 HTTP 代理服务器类库，支持 HTTP、HTTPS、Websocket 协议，并且支持 MITM(中间人攻击)，可以对 HTTP、HTTPS 协议的报文进行捕获和篡改。 使用 1 2 3 4 5 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.rplees&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;iproxy&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.1.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 示例 普通 HTTP 代理服务器 1 new ServerStarter().start(1113); 中间人 HTTP 代理服务器 以下是一个中间人攻击演示，在</description>
    </item>
    
    <item>
      <title>JS面试题</title>
      <link>/post/JS%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/JS%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>下面的代码输出什么 1 2 3 4 var x; // 声明 x console.log(x); console.log(typeof y); console.log(z); 下面的代码输出什么？ 1 2 3 4 5 var y = 1; if (function f(){}) { y += typeof f; } console.log(y); JavaScript中什么是闭包？ 写一个mul函数，使用方法如下。 1 2 console.log(mul(2)(3)(4)); // output : 24 console.log(mul(4)(3)(4)); // output : 48 JavaScript怎么清空数组？ 怎么判断一个object是否是数组(array) 下面</description>
    </item>
    
    <item>
      <title>后台技术架构文档</title>
      <link>/post/%E5%90%8E%E5%8F%B0%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84%E6%96%87%E6%A1%A3/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%90%8E%E5%8F%B0%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84%E6%96%87%E6%A1%A3/</guid>
      <description>后台技术架构文档-精洲华娱 文档归公司内部使用 开发模式- 小步快走，快速迭代 使用敏捷开发模式开发,敏捷方法是试图通过小型的. 自我管理的团队用短小的合作发布周期来鼓励迭代式软件开发方法.软件的质量贯穿敏捷软件开发每一个阶段.且非常重要,来保证能在每一个迭代周期内及早是的发现并及时相应消</description>
    </item>
    
    <item>
      <title>前端开发面试题</title>
      <link>/post/HTML%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/HTML%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>前端开发面试题 前端开发知识点： HTML&amp;amp;CSS： 对Web标准的理解、浏览器内核差异、兼容性、hack、CSS基本功：布局、盒子模型、选择器优先级、 HTML5、CSS3、Flexbox JavaScript： 数据类型、运算、对象、Function、继承、闭包、作用域、原型链、</description>
    </item>
    
    <item>
      <title>SS服务端搭建</title>
      <link>/post/ss%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Sat, 18 Mar 2017 15:25:58 +0000</pubDate>
      
      <guid>/post/ss%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</guid>
      <description>SS服务端搭建 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 python --version yum install python-setuptools &amp;amp;&amp;amp; easy_install pip pip install shadowsocks yum install m2crypto vim /etc/shadowsocks.json #编辑shadowsocks.json的内容主要是IP与密码 { &amp;#34;server&amp;#34;:&amp;#34;本机外网IP&amp;#34;, &amp;#34;server_port&amp;#34;:8388, &amp;#34;local_address&amp;#34;: &amp;#34;127.0.0.1&amp;#34;, &amp;#34;local_port&amp;#34;:1080, &amp;#34;password&amp;#34;:&amp;#34;密码&amp;#</description>
    </item>
    
    <item>
      <title>搭建</title>
      <link>/post/%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Sat, 18 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/%E6%90%AD%E5%BB%BA/</guid>
      <description>搭建离不开以下提供的资料 Inline code are surround by backtick key. To create a block code: ):[http://wingjay.com/2015/12/07/如何在一天之内搭建以你自己名字为域名的很cool的个人博客/](http://wingjay.com/2015/12/07/如何在一天之内搭建以你自己名字为域名的很c</description>
    </item>
    
    <item>
      <title>ReactNative技术分享</title>
      <link>/post/react-native%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/</link>
      <pubDate>Fri, 28 Oct 2016 09:20:58 +0000</pubDate>
      
      <guid>/post/react-native%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/</guid>
      <description>React-Native介绍 LEARN ONCE, WRITE ANYWHERE: BUILD MOBILE APPS WITH REACT 优点: 复用了 React 的思想，有利于前端开发者涉足移动端。 能够利用 JavaScript 动态更新的特性，快速迭代。 相比于原生平台，开发速度更快，相比于 Hybrid 框架，性能更好。 缺点: 做不到 Write once, Run everywhere，也就是说开发者依然需要为 iOS 和 Android 平台提供两套不同的代码，</description>
    </item>
    
    <item>
      <title>ReactJS技术分享</title>
      <link>/post/reactjs%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/</link>
      <pubDate>Mon, 17 Oct 2016 09:20:58 +0000</pubDate>
      
      <guid>/post/reactjs%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/</guid>
      <description>React的定义与原理 React是一个用于构建用户界面的JavaScript库，而不是一个MVC框架，但可以使用React作为MVC架构的View层轻易的在已有项目中使用。 官方定义 A JAVASCRIPT LIBRARY FOR BUILDING USER INTERFACES(一个用于构建用户界面的JavaScript库) 为什么用React 高</description>
    </item>
    
    <item>
      <title>Ngrok服务端搭建与linux\mac\window客户端的编译</title>
      <link>/post/ngrok%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%90%AD%E5%BB%BA%E4%B8%8Elinux-mac-window%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E7%BC%96%E8%AF%91/</link>
      <pubDate>Tue, 22 Mar 2016 20:20:58 +0000</pubDate>
      
      <guid>/post/ngrok%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%90%AD%E5%BB%BA%E4%B8%8Elinux-mac-window%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E7%BC%96%E8%AF%91/</guid>
      <description>ngrok 服务编译的前提 1 2 3 wget https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz sudo tar -C /usr/local -xzf go1.4.3.linux-amd64.tar.gz export PATH=$PATH:/usr/local/go/bin ngrok 服务端 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 cd /usr/local git clone https://github.com/inconshreveable/ngrok.git cd ngrok openssl genrsa -out rootCA.key 2048; openssl req -x509 -new -nodes -key rootCA.key -subj &amp;#34;/CN=ngrok.allji.cn&amp;#34; -days 5000 -out rootCA.pem; openssl genrsa -out device.key 2048; openssl req -new -key device.key -subj &amp;#34;/CN=ngrok.allji.cn&amp;#34; -out device.csr; openssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000; //copy cp rootCA.pem ../ngrok/assets/client/tls/ngrokroot.crt; cp device.crt ../ngrok/assets/server/tls/snakeoil.crt; cp device.key ../ngrok/assets/server/tls/snakeoil.key; make release-server 客户端 windows 1 2 3 4 cd /usr/local/go/src/; GOOS=windows GOARCH=386 CGO_ENABLED=0 ./make.bash; cd /usr/local/ngrok; GOOS=windows GOARCH=386 make release-client; 客户端 linux 1 make release-client; 客户端 mac 1 2 3</description>
    </item>
    
    <item>
      <title>Java工程师面试题</title>
      <link>/post/Java%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Thu, 25 Feb 2016 17:20:58 +0000</pubDate>
      
      <guid>/post/Java%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>#Java工程师面试题 1、下面哪些是Thread类的方法（ ） A、start() B、 run() C、exit() D、 getPriority() 2、下列说法正确的有（ ） A． class中的constructor不可省略 B． constructor必须与class同名，但方法不能与class同名 C． constructor在</description>
    </item>
    
    <item>
      <title>Java工程师面试题-有答案</title>
      <link>/post/Java%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%9C%89%E7%AD%94%E6%A1%88/</link>
      <pubDate>Thu, 25 Feb 2016 17:20:58 +0000</pubDate>
      
      <guid>/post/Java%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%9C%89%E7%AD%94%E6%A1%88/</guid>
      <description>#Java工程师面试题-有答案 1、下面哪些是Thread类的方法（ ABD ） A、start() B、 run() C、exit() D、 getPriority() 2、下列说法正确的有（ C ） A． class中的constructor不可省略 B． constructor必须与class同名，但方法不能与class同名 C． constr</description>
    </item>
    
    <item>
      <title>SublimeText 3 搭建 React.js 开发环境</title>
      <link>/post/sublime-text-3%E6%90%AD%E5%BB%BA-react.js-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Wed, 17 Feb 2016 11:20:58 +0000</pubDate>
      
      <guid>/post/sublime-text-3%E6%90%AD%E5%BB%BA-react.js-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>转载来源 Sublime Text 3 搭建 React.js 开发环境 Sublime有很强的自定义功能，插件库很庞大，针对新语言插件更新很快，配合使用可以快速搭建适配语言的开发环境。 babel-sublime 支持ES6， React.js, jsx代码高亮，对 JavaScript, jQuery 也有很好的扩展。关于 babel 的更多介绍可以看这里：为什么说Babel将推动JavaScript的发展 安装 PC</description>
    </item>
    
    <item>
      <title>ReactNative环境搭建</title>
      <link>/post/react-native%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Thu, 14 Jan 2016 11:20:58 +0000</pubDate>
      
      <guid>/post/react-native%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>React Native环境搭建 前期准备环境 brew 安装 brew 在官方网站对brew的用法进行了详细的描述,是一款更方便的下载软件库的软件，类似于centos的yum。 安装方法：在Mac中打开Termal: 输入命令 1 ruby -e &amp;#34;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&amp;#34; 使用方法： 1 2 3 brew install wget brew uninstall wget brew search /wge*/ node.js 安装 以下是官方定义: 1 Node.js® is</description>
    </item>
    
  </channel>
</rss>
